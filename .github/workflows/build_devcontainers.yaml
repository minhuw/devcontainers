name: "Release Dev Container"
on:
    workflow_dispatch:
    push:
        branches:
          - 'master'
        paths:
          - containers/**
          - .github/workflows/build_devcontainers.yaml

env:
    REGISTRY: ghcr.io

jobs:
    detect-changes:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.changes.outputs.matrix }}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3
            with:
                fetch-depth: 0

          - name: Detect changed containers
            id: changes
            run: |
                # Get all available containers
                ALL_CONTAINERS=""
                while IFS= read -r container_dir; do
                    container_name=$(echo "$container_dir" | cut -d'/' -f2)
                    ALL_CONTAINERS+="$container_name"$'\n'
                done < <(find containers -name .devcontainer -type d)

                if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                    # Manual: build all
                    CONTAINERS="$ALL_CONTAINERS"
                    echo "Manual dispatch: building all containers"
                else
                    # Push: detect changes and new containers
                    # Check if we have valid git refs
                    if [ -z "${{ github.event.before }}" ] || ! git cat-file -e "${{ github.event.before }}" 2>/dev/null; then
                        echo "Invalid or missing before ref, building all containers"
                        CONTAINERS="$ALL_CONTAINERS"
                    else
                        CHANGED_FILES=$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}")
                        CHANGED_CONTAINERS=$(echo "$CHANGED_FILES" | grep "^containers/" | cut -d'/' -f2 | sort -u || true)

                        # Also detect new containers (added .devcontainer directories)
                        NEW_CONTAINERS=$(git diff --name-only --diff-filter=A "${{ github.event.before }}" "${{ github.sha }}" | grep "containers/.*/\.devcontainer/devcontainer\.json" | cut -d'/' -f2 || true)

                        # Combine changed and new containers
                        CONTAINERS=$(echo -e "$CHANGED_CONTAINERS\n$NEW_CONTAINERS" | sort -u | grep -v '^$' || true)

                        # If no containers detected or base changed, build all containers
                        if [ -z "$CONTAINERS" ] || (echo "$CONTAINERS" | grep -q "^base$"); then
                            echo "Base container changed or no valid changes detected: building all containers"
                            CONTAINERS="$ALL_CONTAINERS"
                        elif [ -n "$NEW_CONTAINERS" ]; then
                            echo "New containers detected: $NEW_CONTAINERS"
                        fi
                    fi
                fi

                # Build JSON matrix
                MATRIX="["
                FIRST=true
                while IFS= read -r container_name; do
                    [[ -z "$container_name" ]] && continue
                    if [ "$FIRST" = "true" ]; then
                        FIRST=false
                    else
                        MATRIX+=","
                    fi
                    MATRIX+="{\"name\":\"$container_name\"}"
                done <<< "$CONTAINERS"
                MATRIX+="]"

                echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
                echo "Building: $(echo "$CONTAINERS" | tr '\n' ' ')"

    build-and-push-image:
        needs: detect-changes
        runs-on: ubuntu-latest
        if: needs.detect-changes.outputs.matrix != '[]'
        strategy:
            fail-fast: false
            max-parallel: 1
            matrix:
              include: ${{ fromJson(needs.detect-changes.outputs.matrix) }}

        permissions:
            contents: read
            packages: write
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3

          - name: Log in to the Container registry
            uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
            with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

          - name: pre-build devcontainer
            uses: devcontainers/ci@v0.3
            with:
              imageName: ghcr.io/${{ github.actor }}/${{ matrix.name }}-dev
              cacheFrom: ghcr.io/${{ github.actor }}/${{ matrix.name }}-dev
              subFolder: containers/${{ matrix.name }}
              push: always